//
// color theme
//

// TODO
/*
body-color
body-bg
*/

// polar colors (grayscale)
$white:                         #fff;
$black:                         #000;

// base, generic colors
//$blue:                      #2c8ef8;
//$indigo:                    #727cf5;
//$purple:                    #6b5eae;
//$pink:                      #ff679b;
//$red:                       #fa5c7c;
//$orange:                    #d99c78;
//$yellow:                    #ffbc00;
//$green:                     #5c745a;
//$teal:                      #02a8b5;
//$cyan:                      #39afd1;
$blue:                          #0d6efd;
$indigo:                        #6610f2;
$purple:                        #6f42c1;
$pink:                          #d63384;
$red:                           #dc3545;
$orange:                        #fd7e14;
$yellow:                        #ffc107;
$green:                         #198754;
$teal:                          #20c997;
$cyan:                          #0dcaf0;

// special colors
$salmon:                        #ff9966;
$seagreen:                      #547a6b;//#54777a;
$seagreen-alt:                            #54777a;
$skyblue:                       #488D89;
$paleyellow:                    #F5CA49;
//$dusk-blue:          #34495d;

// harmony rules
$COMPLEMENTARY:                 180;  // => makes 1 color
$SPLITCOMPLEMENTARY:            150;  // => makes 2 colors
$ANALOGOUS:                     30;   // => makes 2 colors
$TRIADIC:                       120;  // => makes 2 colors
$TETRADICSQUARE:                90;   // => makes 3 colors
$TETRADICRECTANGLE:             60;   // => makes 3 colors

$salmon-complement:             adjust-hue($salmon, $COMPLEMENTARY);
$salmon-splitcomplement-1:      adjust-hue($salmon, $SPLITCOMPLEMENTARY);
$salmon-splitcomplement-2:      adjust-hue($salmon, ($SPLITCOMPLEMENTARY * -1));
$salmon-analogous-1:            adjust-hue($salmon, $ANALOGOUS);
$salmon-analogous-2:            adjust-hue($salmon, ($ANALOGOUS * -1));
$salmon-triadic-1:              adjust-hue($salmon, $TRIADIC);
$salmon-triadic-2:              adjust-hue($salmon, (-$TRIADIC * -1));
$salmon-tetradic-1:             adjust-hue($salmon, $TETRADICSQUARE);
$salmon-tetradic-2:             adjust-hue($salmon, ($TETRADICSQUARE * -1));
$salmon-tetradic-3:             adjust-hue($salmon, (($TETRADICSQUARE*2) * -1));
$seagreen-complement:           adjust-hue($seagreen, $COMPLEMENTARY);
$seagreen-splitcomplement-1:    adjust-hue($seagreen, $SPLITCOMPLEMENTARY);
$seagreen-splitcomplement-2:    adjust-hue($seagreen, ($SPLITCOMPLEMENTARY * -1));
$seagreen-analogous-1:          adjust-hue($seagreen, $ANALOGOUS);
$seagreen-analogous-2:          adjust-hue($seagreen, ($ANALOGOUS * -1));
$seagreen-triadic-1:            adjust-hue($seagreen, $TRIADIC);
$seagreen-triadic-2:            adjust-hue($seagreen, (-$TRIADIC * -1));
$seagreen-tetradic-1:           adjust-hue($seagreen, $TETRADICSQUARE);
$seagreen-tetradic-2:           adjust-hue($seagreen, ($TETRADICSQUARE * -1));
$seagreen-tetradic-3:           adjust-hue($seagreen, (($TETRADICSQUARE*2) * -1));
$skyblue-complement:            adjust-hue($skyblue, $COMPLEMENTARY);
$skyblue-splitcomplement-1:     adjust-hue($skyblue, $SPLITCOMPLEMENTARY);
$skyblue-splitcomplement-2:     adjust-hue($skyblue, ($SPLITCOMPLEMENTARY * -1));
$skyblue-analogous-1:           adjust-hue($skyblue, $ANALOGOUS);
$skyblue-analogous-2:           adjust-hue($skyblue, ($ANALOGOUS * -1));
$skyblue-triadic-1:             adjust-hue($skyblue, $TRIADIC);
$skyblue-triadic-2:             adjust-hue($skyblue, (-$TRIADIC * -1));
$skyblue-tetradic-1:            adjust-hue($skyblue, $TETRADICSQUARE);
$skyblue-tetradic-2:            adjust-hue($skyblue, ($TETRADICSQUARE * -1));
$skyblue-tetradic-3:            adjust-hue($skyblue, (($TETRADICSQUARE*2) * -1));
$paleyellow-complement:         adjust-hue($paleyellow, $COMPLEMENTARY);
$paleyellow-splitcomplement-1:  adjust-hue($paleyellow, $SPLITCOMPLEMENTARY);
$paleyellow-splitcomplement-2:  adjust-hue($paleyellow, ($SPLITCOMPLEMENTARY * -1));
$paleyellow-analogous-1:        adjust-hue($paleyellow, $ANALOGOUS);
$paleyellow-analogous-2:        adjust-hue($paleyellow, ($ANALOGOUS * -1));
$paleyellow-triadic-1:          adjust-hue($paleyellow, $TRIADIC);
$paleyellow-triadic-2:          adjust-hue($paleyellow, (-$TRIADIC * -1));
$paleyellow-tetradic-1:         adjust-hue($paleyellow, $TETRADICSQUARE);
$paleyellow-tetradic-2:         adjust-hue($paleyellow, ($TETRADICSQUARE * -1));
$paleyellow-tetradic-3:         adjust-hue($paleyellow, (($TETRADICSQUARE*2) * -1));

// bootstrap theme colors
$primary:       $seagreen;
$secondary:     $gray-700;
$success:       $green;
$info:          $cyan;
$warning:       $yellow;
$danger:        $red;
$light:         $gray-200;
$dark:          $gray-900;

$gray-100: shade-color($white, 10%);
$gray-200: shade-color($white, 20%);
$gray-300: shade-color($white, 30%);
$gray-400: shade-color($white, 40%);
$gray-500: shade-color($white, 50%);
$gray-600: shade-color($white, 60%);
$gray-700: shade-color($white, 70%);
$gray-800: shade-color($white, 80%);
$gray-900: shade-color($white, 90%);

$blue-100: tint-color($blue, 80%);
$blue-200: tint-color($blue, 60%);
$blue-300: tint-color($blue, 40%);
$blue-400: tint-color($blue, 20%);
$blue-500: $blue;
$blue-600: shade-color($blue, 20%);
$blue-700: shade-color($blue, 40%);
$blue-800: shade-color($blue, 60%);
$blue-900: shade-color($blue, 80%);

$indigo-100: tint-color($indigo, 80%);
$indigo-200: tint-color($indigo, 60%);
$indigo-300: tint-color($indigo, 40%);
$indigo-400: tint-color($indigo, 20%);
$indigo-500: $indigo;
$indigo-600: shade-color($indigo, 20%);
$indigo-700: shade-color($indigo, 40%);
$indigo-800: shade-color($indigo, 60%);
$indigo-900: shade-color($indigo, 80%);

$purple-100: tint-color($purple, 80%);
$purple-200: tint-color($purple, 60%);
$purple-300: tint-color($purple, 40%);
$purple-400: tint-color($purple, 20%);
$purple-500: $purple;
$purple-600: shade-color($purple, 20%);
$purple-700: shade-color($purple, 40%);
$purple-800: shade-color($purple, 60%);
$purple-900: shade-color($purple, 80%);

$pink-100: tint-color($pink, 80%);
$pink-200: tint-color($pink, 60%);
$pink-300: tint-color($pink, 40%);
$pink-400: tint-color($pink, 20%);
$pink-500: $pink;
$pink-600: shade-color($pink, 20%);
$pink-700: shade-color($pink, 40%);
$pink-800: shade-color($pink, 60%);
$pink-900: shade-color($pink, 80%);

$red-100: tint-color($red, 80%);
$red-200: tint-color($red, 60%);
$red-300: tint-color($red, 40%);
$red-400: tint-color($red, 20%);
$red-500: $red;
$red-600: shade-color($red, 20%);
$red-700: shade-color($red, 40%);
$red-800: shade-color($red, 60%);
$red-900: shade-color($red, 80%);

$orange-100: tint-color($orange, 80%);
$orange-200: tint-color($orange, 60%);
$orange-300: tint-color($orange, 40%);
$orange-400: tint-color($orange, 20%);
$orange-500: $orange;
$orange-600: shade-color($orange, 20%);
$orange-700: shade-color($orange, 40%);
$orange-800: shade-color($orange, 60%);
$orange-900: shade-color($orange, 80%);

$yellow-100: tint-color($yellow, 80%);
$yellow-200: tint-color($yellow, 60%);
$yellow-300: tint-color($yellow, 40%);
$yellow-400: tint-color($yellow, 20%);
$yellow-500: $yellow;
$yellow-600: shade-color($yellow, 20%);
$yellow-700: shade-color($yellow, 40%);
$yellow-800: shade-color($yellow, 60%);
$yellow-900: shade-color($yellow, 80%);

$green-100: tint-color($green, 80%);
$green-200: tint-color($green, 60%);
$green-300: tint-color($green, 40%);
$green-400: tint-color($green, 20%);
$green-500: $green;
$green-600: shade-color($green, 20%);
$green-700: shade-color($green, 40%);
$green-800: shade-color($green, 60%);
$green-900: shade-color($green, 80%);

$teal-100: tint-color($teal, 80%);
$teal-200: tint-color($teal, 60%);
$teal-300: tint-color($teal, 40%);
$teal-400: tint-color($teal, 20%);
$teal-500: $teal;
$teal-600: shade-color($teal, 20%);
$teal-700: shade-color($teal, 40%);
$teal-800: shade-color($teal, 60%);
$teal-900: shade-color($teal, 80%);

$cyan-100: tint-color($cyan, 80%);
$cyan-200: tint-color($cyan, 60%);
$cyan-300: tint-color($cyan, 40%);
$cyan-400: tint-color($cyan, 20%);
$cyan-500: $cyan;
$cyan-600: shade-color($cyan, 20%);
$cyan-700: shade-color($cyan, 40%);
$cyan-800: shade-color($cyan, 60%);
$cyan-900: shade-color($cyan, 80%);

$grays: (
  "100": $gray-100,
  "200": $gray-200,
  "300": $gray-300,
  "400": $gray-400,
  "500": $gray-500,
  "600": $gray-600,
  "700": $gray-700,
  "800": $gray-800,
  "900": $gray-900
);

$blues: (
  "blue-100": $blue-100,
  "blue-200": $blue-200,
  "blue-300": $blue-300,
  "blue-400": $blue-400,
  "blue-500": $blue-500,
  "blue-600": $blue-600,
  "blue-700": $blue-700,
  "blue-800": $blue-800,
  "blue-900": $blue-900
);

$indigos: (
  "indigo-100": $indigo-100,
  "indigo-200": $indigo-200,
  "indigo-300": $indigo-300,
  "indigo-400": $indigo-400,
  "indigo-500": $indigo-500,
  "indigo-600": $indigo-600,
  "indigo-700": $indigo-700,
  "indigo-800": $indigo-800,
  "indigo-900": $indigo-900
);

$purples: (
  "purple-100": $purple-200,
  "purple-200": $purple-100,
  "purple-300": $purple-300,
  "purple-400": $purple-400,
  "purple-500": $purple-500,
  "purple-600": $purple-600,
  "purple-700": $purple-700,
  "purple-800": $purple-800,
  "purple-900": $purple-900
);

$pinks: (
  "pink-100": $pink-100,
  "pink-200": $pink-200,
  "pink-300": $pink-300,
  "pink-400": $pink-400,
  "pink-500": $pink-500,
  "pink-600": $pink-600,
  "pink-700": $pink-700,
  "pink-800": $pink-800,
  "pink-900": $pink-900
);

$reds: (
  "red-100": $red-100,
  "red-200": $red-200,
  "red-300": $red-300,
  "red-400": $red-400,
  "red-500": $red-500,
  "red-600": $red-600,
  "red-700": $red-700,
  "red-800": $red-800,
  "red-900": $red-900
);

$oranges: (
  "orange-100": $orange-100,
  "orange-200": $orange-200,
  "orange-300": $orange-300,
  "orange-400": $orange-400,
  "orange-500": $orange-500,
  "orange-600": $orange-600,
  "orange-700": $orange-700,
  "orange-800": $orange-800,
  "orange-900": $orange-900
);

$yellows: (
  "yellow-100": $yellow-100,
  "yellow-200": $yellow-200,
  "yellow-300": $yellow-300,
  "yellow-400": $yellow-400,
  "yellow-500": $yellow-500,
  "yellow-600": $yellow-600,
  "yellow-700": $yellow-700,
  "yellow-800": $yellow-800,
  "yellow-900": $yellow-900
);

$greens: (
  "green-100": $green-100,
  "green-200": $green-200,
  "green-300": $green-300,
  "green-400": $green-400,
  "green-500": $green-500,
  "green-600": $green-600,
  "green-700": $green-700,
  "green-800": $green-800,
  "green-900": $green-900
);

$teals: (
  "teal-100": $teal-100,
  "teal-200": $teal-200,
  "teal-300": $teal-300,
  "teal-400": $teal-400,
  "teal-500": $teal-500,
  "teal-600": $teal-600,
  "teal-700": $teal-700,
  "teal-800": $teal-800,
  "teal-900": $teal-900
);

$cyans: (
  "cyan-100": $cyan-100,
  "cyan-200": $cyan-200,
  "cyan-300": $cyan-300,
  "cyan-400": $cyan-400,
  "cyan-500": $cyan-500,
  "cyan-600": $cyan-600,
  "cyan-700": $cyan-700,
  "cyan-800": $cyan-800,
  "cyan-900": $cyan-900
);

$colors: (
  "blue":       $blue,
  "indigo":     $indigo,
  "purple":     $purple,
  "pink":       $pink,
  "red":        $red,
  "orange":     $orange,
  "yellow":     $yellow,
  "green":      $green,
  "teal":       $teal,
  "cyan":       $cyan,
  "white":      $white,
  "gray":       $gray-600,
  "gray-dark":  $gray-800
);

$theme-colors: (
  "primary":    $primary,
  "secondary":  $secondary,
  "success":    $success,
  "info":       $info,
  "warning":    $warning,
  "danger":     $danger,
  "light":      $light,
  "dark":       $dark
);

// this is a bootstrap variable -- cannot easily rename it
$theme-colors-rgb: map-loop($theme-colors, to-rgb, "$value");

// if gradient is enabled in theme settings, 
// this will be applied to various components.
// it can also be manually applied by adding the 
// .bs-gradient selector to an html element
$gradient: linear-gradient(180deg, rgba($primary, .15), rgba($indigo, 0));

//
// utilities (color)
//
// these help to implement the color theme

// utilities-colors is a bootstrap variable 
// which might be able to be removed
$utilities-colors:        $theme-colors-rgb;
$utilities-text:          map-merge(
                            $utilities-colors,(
                              "black": to-rgb($black),
                              "white": to-rgb($white),
                              "body":  to-rgb($body-color)));
$utilities-text-colors:   map-loop(
                            $utilities-text, 
                            rgba-css-var, 
                            "$key", 
                            "text");
$utilities-bg:            map-merge(
                            $utilities-colors,(
                              "black": to-rgb($black),
                              "white": to-rgb($white),
                              "body": to-rgb($body-bg)));
$utilities-bg-colors:     map-loop(
                            $utilities-bg, 
                            rgba-css-var, 
                            "$key", 
                            "bg");

